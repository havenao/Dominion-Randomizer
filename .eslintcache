[{"/Users/haven/Desktop/Dev/React-Dominion/dominion/src/App.js":"1","/Users/haven/Desktop/Dev/React-Dominion/dominion/src/cardList.js":"2","/Users/haven/Desktop/Dev/React-Dominion/dominion/src/Card.js":"3","/Users/haven/Desktop/Dev/React-Dominion/dominion/src/extrasList.js":"4","/Users/haven/Desktop/Dev/React-Dominion/dominion/src/Extra.js":"5","/Users/haven/Desktop/Dev/React-Dominion/dominion/src/Setup.js":"6","/Users/haven/Desktop/Dev/React-Dominion/dominion/src/reportWebVitals.js":"7","/Users/haven/Desktop/Dev/React-Dominion/dominion/src/index.js":"8"},{"size":3995,"mtime":1611605974000,"results":"9","hashOfConfig":"10"},{"size":35805,"mtime":1611342034000,"results":"11","hashOfConfig":"10"},{"size":270,"mtime":1611607058000,"results":"12","hashOfConfig":"10"},{"size":12836,"mtime":1611586439000,"results":"13","hashOfConfig":"10"},{"size":372,"mtime":1611607064000,"results":"14","hashOfConfig":"10"},{"size":167,"mtime":1611605549000,"results":"15","hashOfConfig":"10"},{"size":362,"mtime":1611324887000,"results":"16","hashOfConfig":"10"},{"size":500,"mtime":1611324887000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"l37x2x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/haven/Desktop/Dev/React-Dominion/dominion/src/App.js",["36","37","38"],"import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport Card from \"./Card\";\nimport Extra from \"./Extra\";\nimport SetupItem from \"./Setup\";\nimport cardList from \"./cardList\";\nimport extrasList from \"./extrasList\";\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [extras, setExtras] = useState([]);\n  const [setup, setSetup] = useState([]);\n  const [ready, setReady] = useState(false);\n\n  //selects the random cards or extras\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  //make the array of cards to use\n  const generateCards = () => {\n    const cardCount = cardList.length;\n    const newCards = [];\n    while (newCards.length < 10) {\n      let newCard = cardList[getRandomInt(cardCount)];\n      if (!newCards.includes(newCard)) {\n        newCards.push(newCard);\n      }\n    }\n    const sorted = newCards.sort((a, b) => (a.name > b.name ? 1 : -1));\n    setCards(sorted);\n  };\n\n  //calculate number of extras to use (Jesse's Algorithm)\n  const getExtrasCount = () => {\n    let result = 0;\n    let looks = 0;\n    const chance = 0.8;\n    while (looks < 10) {\n      let rand = Math.random();\n      if (rand > chance) {\n        result++;\n      } else {\n        looks += result + 1;\n      }\n    }\n    return result;\n  };\n\n  // make the array of extras to use\n  const generateExtras = () => {\n    const newExtras = [];\n    const extrasCount = extrasList.length;\n    const newExtrasCount = getExtrasCount();\n    while (newExtras.length < newExtrasCount) {\n      let newExtra = extrasList[getRandomInt(extrasCount)];\n      if (!newExtras.includes(newExtra)) {\n        newExtras.push(newExtra);\n      }\n    }\n    const sorted = newExtras.sort((a, b) => (a.name > b.name ? 1 : -1));\n    setExtras(sorted);\n  };\n\n  //make array of setup items\n  const generateSetup = () => {\n    let newSetup = [];\n    const chance = 0.33;\n    let bigRand = Math.random();\n    let shelterRand = Math.random();\n\n    if (bigRand <= chance) {\n      newSetup.push(\"Bigs\");\n    }\n    if (shelterRand <= chance) {\n      newSetup.push(\"Shelters\");\n    }\n    cards.map((card) => {\n      if (card.setup !== \"\" && !newSetup.includes(card.setup)) {\n        newSetup.push(card.setup);\n        console.log(`${card.setup} from ${card.name}`);\n      }\n    });\n    extras.map((extra) => {\n      if (extra.setup !== \"\" && !newSetup.includes(extra.setup)) {\n        newSetup.push(extra.setup);\n        console.log(`${extra.setup} from ${extra.name}`);\n      }\n    });\n\n    setSetup(newSetup);\n  };\n\n  useEffect(() => {\n    if (ready) {\n      generateSetup();\n    }\n  }, [cards, extras]);\n\n  return (\n    <main>\n      <div className={`${ready ? \"off\" : null} title`}>\n        <img\n          src=\"./images/dominion logo.jpg\"\n          alt=\"Dominion Logo\"\n          id=\"dom-logo\"\n          className={ready ? \"off\" : null}\n        />\n        <h2 className=\"subtitle\">Setup Randomizer</h2>\n      </div>\n      <header>\n        <button\n          className=\"btn\"\n          onClick={(e) => {\n            e.preventDefault();\n            generateCards();\n            generateExtras();\n            setReady(true);\n          }}\n        >\n          Generate Kingdom\n        </button>\n        <div className=\"underline\"></div>\n      </header>\n      <section className=\"container\">\n        <article className={ready && \"setup\"}>\n          <div className=\"setup-item-container\">\n            {setup.map((item, index) => {\n              return <SetupItem item={item} key={index} />;\n            })}\n          </div>\n        </article>\n\n        <article className={cards.length > 0 && \"cards\"}>\n          {cards.map((card, index) => {\n            return <Card card={card} key={index} />;\n          })}\n        </article>\n\n        <article className={extras.length > 0 && \"extras\"}>\n          {extras.map((extra, index) => {\n            return <Extra extra={extra} key={index} />;\n          })}\n        </article>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","/Users/haven/Desktop/Dev/React-Dominion/dominion/src/cardList.js",[],"/Users/haven/Desktop/Dev/React-Dominion/dominion/src/Card.js",[],"/Users/haven/Desktop/Dev/React-Dominion/dominion/src/extrasList.js",[],"/Users/haven/Desktop/Dev/React-Dominion/dominion/src/Extra.js",[],"/Users/haven/Desktop/Dev/React-Dominion/dominion/src/Setup.js",[],"/Users/haven/Desktop/Dev/React-Dominion/dominion/src/reportWebVitals.js",[],"/Users/haven/Desktop/Dev/React-Dominion/dominion/src/index.js",[],["39","40"],{"ruleId":"41","severity":1,"message":"42","line":78,"column":22,"nodeType":"43","messageId":"44","endLine":78,"endColumn":24},{"ruleId":"41","severity":1,"message":"42","line":84,"column":24,"nodeType":"43","messageId":"44","endLine":84,"endColumn":26},{"ruleId":"45","severity":1,"message":"46","line":98,"column":6,"nodeType":"47","endLine":98,"endColumn":21,"suggestions":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'generateSetup' and 'ready'. Either include them or remove the dependency array.","ArrayExpression",["53"],"no-native-reassign",["54"],"no-negated-in-lhs",["55"],{"desc":"56","fix":"57"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [cards, extras, generateSetup, ready]",{"range":"58","text":"59"},[2614,2629],"[cards, extras, generateSetup, ready]"]